{"/":{"title":"ðŸŒ“ Ryan's Garden","content":"Welcome to my [digital garden](https://nesslabs.com/digital-garden-set-up#:~:text=A%20digital%20garden%20is%20an,to%20be%20cultivated%20in%20public.)! This is where I keep track of all of my ideas, notes, discussions, personal projects, and pretty much everything else. These notes may not be polished or final; some are posted as incomplete thoughts that I may revisit later or link to other notes to develop and change over time. In contrast to a blog, the contents aren't precisely arranged by the date they were published, and the [[my topics|topics]] layout is a reflection of my own preferences and way of thinking.\n\n## Why this place?\n\nI wrote blogs across a variety of platforms for a while, but I couldn't settle on one to use consistently. I once decided to write about a [[neutrino application]] and quickly realized that the neutrino concept might be simpler to grasp using bidirectional links due to its interconnection with so many other particle physics concepts. So I thought, \"Why not publish my [Obsidian](https://obsidian.md/) notes and utilize them for my blogs?\"\n\nI've had a lot of fun setting up my own garden (and a little headache because I'm new to all of this haha). Many thanks to [Jacky Zhao](https://jzhao.xyz/) for creating this incredible tool!\n\n## How to navigate\n\nThe best part about this digital garden is that you can simply move from note to note by clicking on internal links on each page or on the nodes of the interactive graph at the bottom. You can also use the search tool at the top to look for pages and keywords.\n\n\n\n\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/image-processing/image-processing":{"title":"Image Processing","content":"## [[image processing/sampling and quantization|Sampling and Quantization in Image Processing]]\n\n## [[image processing/programming exercises (MATLAB)|Programming Exercises (MATLAB)]]\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/image-processing/programming-exercises-MATLAB":{"title":"Programming Exercises (MATLAB)","content":"\nWrite a computer program capable of reducing the number of intensity levels in an image from 256 to 2, in integer powers of 2. The desired number of intensity levels needs to be a variable input to your program.\n\n```\nsize = '128';\na = imread(['https://avatars.githubusercontent.com/u/103092148?v=4' size]);\nimshow(a);\ntest(rgb2gray(a));\ntest(a);\n\nfunction y = im_downgrade(img, intensity_levels)\n    y = round(img.*((intensity_levels - 1)/256));\nend\n\nfunction y = im_upgrade(img_downgraded, intensity_levels)\n    y = img_downgraded.*(256/(intensity_levels - 1));\nend\n\nfunction test(img)\n    for k = 1:8\n        levels = 2.^k;\n        img_down = im_downgrade(img, levels);\n        new_img = im_upgrade(img_down, levels);\n        imshow(new_img);\n        figure;\n        imhist(new_img);\n        figure;\n    end\nend\n```\n\nRotate the image by 45 and 90 degrees (Matlab provides simple command lines for doing this).\n\n```\nd = imread('https://avatars.githubusercontent.com/u/103092148?v=4');\nr45 = imrotate(d,45);\nimshow(r45);\nfigure;\nr90 = imrotate(d,90);\nimshow(r90);\n```","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/image-processing/sampling-and-quantization":{"title":"Sampling and Quantization in Image Processing","content":"*Images mentioned in this post are from Digital Image Processing (3rd edition), by Rafael C. Gonzalez, Richard E. Woods. I don't have the permission to use them here.*\n\nImages that we are familiar with represent a very small portion of the spectrum of images that can be acquired at various wavelengths and modalities _(Figure 2.10)_. In this post, I'll talk about the two most common image formats: grayscale and RGB.\n\nThere are two discretization processes in image processing: sampling (spatial discretization) and quantization (amplitude discretization). _Figures 2.16 and 2.17._\n\n-   Sampling: The sampling rate determines the spatial resolution of the image (related to coordinate values).\n\n-   Quantization: The quantization level specifies the image's grayscale range (related to intensity values).\n\nBasically, we begin with a continuous object and end up with a discrete object that has discretization in both the spatial domain and the gray value range. A good digital camera should have a dense enough sampling rate and a fine enough level of quantization to produce images that appear continuous but are actually discrete.\n\n## Grayscale images\n\nEach of the squares in _Figure 2.17 (b)_ represents a picture element, denoted by the term _pixel_. A 256x256 spatial domain image, for example, has 256 x 256 = 65,536 pixels, whereas a 1024x1280 image has 1,310,720 pixels. The value of each pixel in grayscale images is related to the amount of bits of data used to represent the pixel (typically 8 bits), ranging from 0 to 255 (28 = 256 grayscale levels created from combinations of 8 binary numbers: 00000000 to 11111111). If a pixel's value is represented by 16 bits, the value range is 0 to 65,535 (216 = 65,536 grayscale levels). We can have higher quality images, for instance, 512x512 images instead of 256x256 images with the same number of letters, so it will take more memory to save that image, but it will also have better quality.\n\nIn grayscale images, the value of each pixel only represents the intensity of light, which ranges from the darkest black to the brightest white. RGB images, which have colors, are another popular image format.\n\n## RGB images\n\nA colored image is made up of many colors, almost all of which can be generated from the three primary colors - red, green, and blue - and combined in various ways to display a wide range of colors. Each RGB image is made up of these three colors, as the name implies (or channels). This means that a colored image has more matrices (or channels).\n\nTo represent the intensity (shades of red, green, and blue) in a pixel, each of the small squares would have values ranging from 0 to 255. Then, all of these matrices (channels) are superimposed so that the final image has the value NxMx3, where N and M are the number of rows and columns, respectively, and 3 represents the number of channels. For example, if each matrix has 6 rows and 5 columns, the image value is 6x5x3.\n\nMost high-end cameras capture full 2-dimensional rays for each color, whereas most low-end to mid-end consumer cameras do something slightly different called mosaic. The basic idea is to capture the pixels with color interleaving (I'll go over this in more detail in another post).\n\n## Videos\n\nSo the next question is, what happens in a video? We have a number of these RGB images. For example, in some formats, we can have 30 x (RGB) for 1 second of video, with each RGB being a 2-dimensional structure. This translates to 30 x 3 = 90 images, with 30 images in 1 second and 3 because there are three color channels. If these images have a resolution of 512x512 and each pixel is represented by 8 bits, we can sometimes say that our resolution is 8 x 3 = 24 bits (3 times because of RGB). We'll see basically 2-dimensional discrete arrays as many seconds or frames as we have in our video using a program that knows how to deal with images. Each of these 30 images is referred to as a frame, and there are 30 frames in a second.\n\n## The Importance and Effects of Resolution in Space and in Gray values\n\n_How many pixels should we have? And what are the gray values we're going to use for them?_\n\nWhen we have 8 bits, 0 represents black and 255 represents white. When discussing the interval between 0 and 1, 255 is sometimes referred to as 1. While we see the black-white-gray image with our eyes, the computer reads it as a string of 0s for the black region, 128 or 0.5 for the grayscale region, and 1 for the white part. _Figure 2.18._\n\nSaturation is one of the potential issues. For instance, because we only have 256 different levels to work with, the image may be too bright and we may be unable to detect small variations in brightness. Remember that the human visual system can adapt to multiple levels of brightness, but not all of them simultaneously - the same is true for images. We can capture many levels (for example, 256), but dealing with a very dark and a very bright region at the same time would be difficult. _Figure 2.19._\n\nSo, we have a discrete number of values to represent our image, and some parts may go above and beyond what we can represent with that number.\n\nNow let's look at the effects in the images below. We have only changed the spatial resolution and not the number of gray values yet: _Figure 2.20._\n\n_Figure 2.20 (a)_ depicts a high-resolution image. This means that the spatial rate is extremely fine - a large number of pixels - and the image quality is excellent. If the image is much coarser _(Figure 2.20 (d))_, there are fewer pixels and less density between them. Apparently, the lines and small details in image (a) are very well represented, whereas in image (d), the small details, such as numbers, are difficult to see, making it hard to read the measurements. Assuming that each pixel is represented by 256 levels, images (a) and (d) have the same range of gray values, but due to the difference in resolution, the representation of fine details is obviously different. We will not be able to detect the smooth variation in gray values with coarse spatial discretization.\n\nNext, let's move on to the effects of coarse discretization of gray values, with fixed number of pixels: _Figure 2.21._\n\nAll four of the images above have the same number of pixels: 452x374. The first image, on the other hand, is displayed in 8 bits (256 values). We only use 7 bits or 128 values for image (b) - basically, values 0 and 1 become 0, 2 and 3 become 2, 4 and 5 become 4,â€¦ The simplest method is to take each value in image (a), divide it by 2, round down to the nearest integer, and then multiply it by 2.\n\n![[images/image processing/samquanti.png]]\n\nThere are only 64 values in image (c), which is equivalent to dividing by 4, truncating, and then multiplying by 4 - each 4 values is represented by 1 number. So, for example, 0, 1, 2, and 3 become 0; 4, 5, 6, and 7 all become 4, and so on. Finally, there are only 32 values in image (d). The quality appears to be deteriorating. Looking at the lines in the last image, we can see that there are false contours, whereas the transition in the first image is smooth. This is caused by the previously mentioned value jumps.\n\nWe can continue to even more extreme cases: _Figure 2.21._\n\nIn the final image (h), any value less than 128 becomes 0 - black, and any value greater than 128 becomes 255 - white, and the data is of poor quality.\n\n## References\n1.  Sapiro, G., _Image and Video Processing: From Mars to Hollywood with a Stop at the Hospital_, Coursera. https://www.coursera.org/learn/image-processing?\n2.  University of Tartu, _2. Sampling and quantization_, accessed 15 April 2022, https://sisu.ut.ee/imageprocessing/book/2\n3.  Liu, H. (2021). Chapter 3Â -Â Rail transit collaborative robot systems. In H. Liu (Ed.),Â _Robot Systems for Rail Transit Applications_Â (pp. 89-141). Elsevier.","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/my-topics":{"title":"My topics","content":"1. [[image processing/image processing|Image Processing]]\n2. [[particle physics/subatomic particles|Particle Physics]]\n3. [climate]\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/bosons":{"title":"bosons","content":"","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/composite-particles":{"title":"composite particles","content":"Include:\n- [[particle physics/hadrons|hadrons]]\n- [[atomic nuclei]]\n- [[atoms]]\n- [[molecules]]\n- [[ions]]","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/electrons":{"title":"electrons","content":"","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/elementary-particles":{"title":"elementary particles","content":"They are [[particle physics/subatomic particles|subatomic particles]] that are not composed of other particles.\n\nCurrent elementary particles:\n- [[particle physics/fermions|fermions]]\n- [[particle physics/bosons|bosons]]\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/fermions":{"title":"fermions","content":"A particle that has a half-odd-integer spin (spin 1/2, spin 3/2, etc.)\n\nFermions include:\n- [[particle physics/quarks|quarks]]\n- [[particle physics/leptons|leptons]]\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/hadrons":{"title":"hadrons","content":"include:\n- [[baryons]]\n- [[mesons]]","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/leptons":{"title":"leptons","content":"A lepton is an elementary particle with spin 1/2 that does not interact strongly ([[strong interactions]])\n\nTwo main types of leptons:\n- charged leptons: [[particle physics/electrons|electrons]] (first generation), [[particle physics/muons|muons]] (second generation), [[particle physics/tauons|tauons]] (third generation)\n- neutral leptons: [[particle physics/neutrinos|neutrinos]]\n\n","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/muons":{"title":"muons","content":"","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/neutrinos":{"title":"neutrinos","content":"Neutrinos are [fermions](https://astrosw.github.io/quartz/particle-physics/fermions) that only interact through [[weak interactions]] and [[gravity]].\n\nThey are electrically neutral and have very small rest mass.","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/quarks":{"title":"quarks","content":"","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/subatomic-particles":{"title":"subatomic particles","content":"Particles that compose an atom.\n\nA subatomic particle can be either a [[particle physics/composite particles|composite particle]] (made up of other particles, such as a proton, neutron, or meson) or an [[particle physics/elementary particles|elementary particle]] (made up of no other particles).","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null},"/particle-physics/tauons":{"title":"tauons","content":"","lastmodified":"2022-08-09T14:19:04.609842517Z","tags":null}}