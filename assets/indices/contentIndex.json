{
  "/": {
    "title": "The Arboretum",
    "content": "Hello there, I'm Ryan. Welcome to my [digital arboretum](https://nesslabs.com/digital-garden-set-up#:~:text=A%20digital%20garden%20is%20an,to%20be%20cultivated%20in%20public.)! This is where I keep track of all of my ideas, notes, discussions, personal projects, and pretty much everything else. These notes may not be polished or final; some are posted as incomplete thoughts that I may revisit later or link to other notes to develop and change over time. In contrast to a blog, the contents aren't precisely arranged by the date they were published, and the layout is a reflection of my own preferences and way of thinking.\n\n*I know the penguins seem out of place given the whole gardening theme, but heyyy aren't they adorable? They are my own drawings!*\n\n## How to navigate\n\nYou can simply move from note to note by clicking on internal links on each page or on the nodes of the interactive graph at the bottom. You can also use the search tool at the top (or Ctrl + K) to look for pages and keywords. Alternatively, you may look at a list of my [topics here](https://thdngan.github.io/quartz/subjects) or click on tags to look for notes in the same categories.\n\n## Why this place?\n\nI wrote blogs across a variety of platforms for a while, but I couldn't settle on one to use consistently. I once decided to write about a [[posts/neutrino communication|neutrino application]] and soon realized that the neutrino concept would be simpler to grasp using bidirectional links due to its interconnection with so many other particle physics concepts. So I thought, \"Why not publish my [Obsidian](https://obsidian.md/) notes and utilize them for my blogs?\"\n\nI've had a lot of fun setting up my own garden (and a little headache because I'm new to all of this haha). Many thanks to Jacky Zhao for creating this incredible [tool](https://github.com/jackyzha0/quartz)!\n\n\n\n\n",
    "lastmodified": "2022-10-22T22:23:59.655455286+07:00",
    "tags": null
  },
  "/my-topics": {
    "title": "My topics",
    "content": "1.  [[subjects/climatenweather|Climate \u0026 Weather]]\n2.  [[subjects/image processing|Image/Signal Processing]] \n3. [[subjects/particle physics|Particle Physics]]",
    "lastmodified": "2022-11-05T10:01:35.184133186+07:00",
    "tags": null
  },
  "/notes/Legacy-Mars-GCM": {
    "title": "Legacy Mars Global Climate Model",
    "content": "\n\n```\n% sudo apt install gfortran\n% git clone https://github.com/nasa/legacy-mars-global-climate-model.git\n% cd legacy-mars-global-climate-model\n% ls -l\n% cd code\n% make clean\n% make\n% cp gcm2.3 ../run/\n% cd ../run/\n% ls\n% ./gcm2.3 \u003cmars_tutorial\u003e m.out \u0026\n```\n\nError:\n\n```\nAt line 301 of file main.f (unit = 6, file = 'stdout')\nFortran runtime error: Sequential READ or WRITE not allowed after EOF marker, possibly use REWIND or BACKSPACE\n\nError termination. Backtrace:\n#0  0x7eff8c3778d2 in ???\n#1  0x7eff8c3783c9 in ???\n#2  0x7eff8c378f1f in ???\n#3  0x7eff8c5c150d in ???\n#4  0x40259e in ???\n#5  0x4023c6 in ???\n#6  0x7eff8bf8d082 in __libc_start_main\n\tat ../csu/libc-start.c:308\n#7  0x4023fd in ???\n\n```\n\nNow where did it go wrong...",
    "lastmodified": "2022-09-02T20:24:56.134655619+07:00",
    "tags": null
  },
  "/notes/albedo": {
    "title": "albedo",
    "content": "\n",
    "lastmodified": "2022-10-22T13:03:57.36928741+07:00",
    "tags": null
  },
  "/notes/blackbody": {
    "title": "Blackbody and Blackbody radiation",
    "content": "\nA blackbody absorbs all incident electromagnetic radiation, independent of frequency or angle of incidence. The term \"black body\" refers to how it absorbs all colors of light (you know, black objects absorb all colors in the visible spectrum and reflects none to the eyes).\n\n_**Blackbody**_ - a hypothetical body consisting of a sufficient number of molecules absorbing and emitting electromagnetic radiation in all parts of the electromagnetic spectrum so that:\n\n1.  all incident radiation is completely absorbed; and\n2.  in all wavelengths bands and in all directions (isotropically), maximum possible emission is realized.\n\nA blackbody emits blackbody radiation as well. The spectrum of light emitted by any heated object is referred to as blackbody radiation.\n\nAlthough a blackbody does not exist in reality, we shall treat the planets and stars (including the Earth and Sun) as if they were. Even though they are not ideal blackbodies by definition, we may apply the features of blackbodies to them for clarity and simplicity.\n\nAccording to the above definition, a blackbody will emit radiation in all parts of the EM spectrum, but by intuition, we know that one will not radiate in all wavelengths equally. So the first thing we would like to know about blackbody radiation is in what wavelengths is radiation emited primarily. Secondly, we know that all blackbodies do not radiate energy at the same rate, certainly shown by the sun's power compared to that of the earth. Therefore, it would be beneficial to know something about the rate of blackbody emission. Fortunately for us, we can answer both questions knowing only one characteristic of an object -- temperature.\n\nWien's Displacement Law:\n\n$$\\lambda_{peak} = \\dfrac{b}{T}$$\n",
    "lastmodified": "2022-10-22T14:08:05.282712889+07:00",
    "tags": null
  },
  "/notes/bosons": {
    "title": "bosons",
    "content": "\n",
    "lastmodified": "2022-09-03T21:45:46.526140219+07:00",
    "tags": null
  },
  "/notes/composite-particles": {
    "title": "composite particles",
    "content": "Include:\n- [[notes/hadrons|hadrons]]\n- [[atomic nuclei]]\n- [[atoms]]\n- [[molecules]]\n- [[ions]]",
    "lastmodified": "2022-09-03T21:45:51.062460775+07:00",
    "tags": null
  },
  "/notes/delta-letters": {
    "title": "Difference between ∂, δ, d and Δ",
    "content": "\n'_Δ_' -- means a change in some variable. This makes it a difference operation: _Δt = t2 - t1_.\n\n'_d_' -- means an 'infinitesimal' change, or a \"[differential form](http://en.wikipedia.org/wiki/Differential_form).\" It's kind of like a limit as _Δt_ -\u003e 0, but it is compatible with relative rates or different kinds of limits, so that the notion of a derivative is preserved (in the form dy/dx, for example.)\n\n'_∂_' -- means a _partial_ differential. It's basically the same as _d_, except it also tells you that there are other related variables that are being held constant. In other words, it is never a complete picture. It's typically used in [partial derivatives](http://en.wikipedia.org/wiki/Partial_derivative) -- derivatives that are only in one dimension of a larger dimensional space.\n\n'_δ_' is just a lowercase _Δ_, and its meaning depends on context. Usually it means an 'infinitesimal' change like _d_, but when you don't want to talk about differential forms or derivatives using the other notations.\n\n-----------\n\nThe [character](https://en.wikipedia.org/wiki/Character_(symbol) \"Character (symbol)\") **∂** ([Unicode](https://en.wikipedia.org/wiki/Unicode \"Unicode\"): U+2202) is a stylized [cursive](https://en.wikipedia.org/wiki/Cursive \"Cursive\") _[d](https://en.wikipedia.org/wiki/D \"D\")_ mainly used as a [mathematical symbol](https://en.wikipedia.org/wiki/Table_of_mathematical_symbols \"Table of mathematical symbols\"), usually to denote a [partial derivative](https://en.wikipedia.org/wiki/Partial_derivative \"Partial derivative\") such as {\\displaystyle {\\partial z}/{\\partial x}}![{\\displaystyle {\\partial z}/{\\partial x}}](https://wikimedia.org/api/rest_v1/media/math/render/svg/a4b98e69ede2ec25b5209584e5e471cf30822b8f) (read as \"the partial derivative of _z_ with respect to _x_\").[[1]](https://en.wikipedia.org/wiki/%E2%88%82#cite_note-1)[[2]](https://en.wikipedia.org/wiki/%E2%88%82#cite_note-2) It is also used for the boundary operator in a [chain complex](https://en.wikipedia.org/wiki/Chain_complex \"Chain complex\"), and the conjugate of the [Dolbeault operator](https://en.wikipedia.org/wiki/Dolbeault_cohomology \"Dolbeault cohomology\") on smooth differential forms over a [complex manifold](https://en.wikipedia.org/wiki/Complex_manifold \"Complex manifold\"). It should be distinguished from other similar-looking symbols such as lowercase [Greek letter delta](https://en.wikipedia.org/wiki/Greek_letter_delta \"Greek letter delta\") (𝛿) or the lowercase Latin letter [eth](https://en.wikipedia.org/wiki/Eth \"Eth\") (ð).\n\n---------------------------\n\nThe lowercase letter δ (or 𝛿) can be used to denote:\n\n-   A change in the value of a variable in [calculus](https://en.wikipedia.org/wiki/Calculus \"Calculus\")\n-   A [functional derivative](https://en.wikipedia.org/wiki/Functional_derivative \"Functional derivative\") in [functional calculus](https://en.wikipedia.org/wiki/Functional_calculus \"Functional calculus\")\n-   An auxiliary function in calculus, used to rigorously define the [limit](https://en.wikipedia.org/wiki/Limit_of_a_function \"Limit of a function\") or [continuity](https://en.wikipedia.org/wiki/Continuous_function \"Continuous function\") of a given function\n-   The [Kronecker delta](https://en.wikipedia.org/wiki/Kronecker_delta \"Kronecker delta\") in mathematics\n-   The degree of a [vertex (graph theory)](https://en.wikipedia.org/wiki/Vertex_(graph_theory) \"Vertex (graph theory)\")\n-   The [Dirac delta function](https://en.wikipedia.org/wiki/Dirac_delta_function \"Dirac delta function\") in mathematics\n-   The transition function in [automata](https://en.wikipedia.org/wiki/Finite-state_machine \"Finite-state machine\")\n-   [Deflection](https://en.wikipedia.org/wiki/Deflection_(engineering) \"Deflection (engineering)\") in engineering mechanics\n-   The [force of interest](https://en.wikipedia.org/wiki/Compound_interest \"Compound interest\") in actuarial science\n-   The [chemical shift](https://en.wikipedia.org/wiki/Chemical_shift \"Chemical shift\") of [nuclear magnetic resonance](https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance \"Nuclear magnetic resonance\") in chemistry\n-   The relative [electronegativity](https://en.wikipedia.org/wiki/Electronegativity \"Electronegativity\") of different atoms in a molecule, δ− being more electronegative than δ+\n-   Text requiring deletion in [proofreading](https://en.wikipedia.org/wiki/Proofreading \"Proofreading\"); the usage is said to date back to classical times\n-   In some of the manuscripts written by Dr. [John Dee](https://en.wikipedia.org/wiki/John_Dee_(mathematician) \"John Dee (mathematician)\"), the character of delta is used to represent Dee\n-   A subunit of the F1 sector of the [F-ATPase](https://en.wikipedia.org/wiki/F-ATPase \"F-ATPase\")\n-   The [declination](https://en.wikipedia.org/wiki/Declination \"Declination\") of an object in the [equatorial coordinate system](https://en.wikipedia.org/wiki/Equatorial_coordinate_system \"Equatorial coordinate system\") of [astronomy](https://en.wikipedia.org/wiki/Astronomy \"Astronomy\")\n-   The dividend yield in the [Black–Scholes](https://en.wikipedia.org/wiki/Black%E2%80%93Scholes \"Black–Scholes\") option pricing formula\n-   Ratios of [environmental isotopes](https://en.wikipedia.org/wiki/Environmental_isotopes \"Environmental isotopes\"), such as 18O/16O and [D](https://en.wikipedia.org/wiki/Deuterium \"Deuterium\")/1H from water are displayed using [delta notation](https://en.wikipedia.org/wiki/Isotope_geochemistry \"Isotope geochemistry\") – δ18O and δD, respectively\n-   The rate of depreciation of the aggregate capital stock of an economy in an [exogenous growth model](https://en.wikipedia.org/wiki/Exogenous_growth_model \"Exogenous growth model\") in [macroeconomics](https://en.wikipedia.org/wiki/Macroeconomics \"Macroeconomics\")[[13]](https://en.wikipedia.org/wiki/Delta_%28letter%29#cite_note-13)\n-   In a system that exhibits [electrical reactance](https://en.wikipedia.org/wiki/Electrical_reactance \"Electrical reactance\"), the angle between [voltage](https://en.wikipedia.org/wiki/Voltage \"Voltage\") and [current](https://en.wikipedia.org/wiki/Electric_current \"Electric current\")\n-   [Partial charge](https://en.wikipedia.org/wiki/Partial_charge \"Partial charge\") in chemistry\n-   The maximum [birrefringence](https://en.wikipedia.org/wiki/Birefringence \"Birefringence\") of a crystal in [optical mineralogy](https://en.wikipedia.org/wiki/Optical_mineralogy \"Optical mineralogy\").[[14]](https://en.wikipedia.org/wiki/Delta_%28letter%29#cite_note-14)\n-   An [Old Irish](https://en.wikipedia.org/wiki/Old_Irish \"Old Irish\") voiced dental or alveolar [fricative](https://en.wikipedia.org/wiki/Fricative \"Fricative\") of uncertain articulation, the ancestor of the sound represented by [Modern Irish](https://en.wikipedia.org/wiki/Irish_language \"Irish language\") _dh_",
    "lastmodified": "2022-09-11T10:23:04.22593116+07:00",
    "tags": null
  },
  "/notes/electrons": {
    "title": "electrons",
    "content": "",
    "lastmodified": "2022-09-03T21:45:55.666809997+07:00",
    "tags": null
  },
  "/notes/elementary-particles": {
    "title": "elementary particles",
    "content": "They are [[notes/subatomic particles|subatomic particles]] that are not composed of other particles.\n\nCurrent elementary particles:\n- [[notes/fermions|fermions]]\n- [[notes/bosons|bosons]]\n",
    "lastmodified": "2022-09-03T21:46:00.655213228+07:00",
    "tags": null
  },
  "/notes/fermions": {
    "title": "fermions",
    "content": "A particle that has a half-odd-integer spin (spin 1/2, spin 3/2, etc.)\n\nFermions include:\n- [[notes/quarks|quarks]]\n- [[notes/leptons|leptons]]\n- [[notes/composite particles|composite particles]]\n\nComposite fermions are the fundamental constituents of all matter.\n\n",
    "lastmodified": "2022-09-03T21:46:05.211602579+07:00",
    "tags": null
  },
  "/notes/gravity": {
    "title": "gravity",
    "content": "",
    "lastmodified": "2022-09-03T21:46:08.751918105+07:00",
    "tags": null
  },
  "/notes/hadrons": {
    "title": "hadrons",
    "content": "include:\n- [[baryons]]\n- [[mesons]]",
    "lastmodified": "2022-09-03T21:46:13.73638027+07:00",
    "tags": null
  },
  "/notes/leptons": {
    "title": "leptons",
    "content": "A lepton is an elementary particle with spin 1/2 that does not interact strongly ([[notes/strong interactions|strong interactions]])\n\nTwo main types of leptons:\n- charged leptons: [[notes/electrons|electrons]] (first generation), [[notes/muons|muons]] (second generation), [[notes/tauons|tauons]] (third generation)\n- neutral leptons: [[notes/neutrinos|neutrinos]]\n\n",
    "lastmodified": "2022-09-03T21:46:19.872975919+07:00",
    "tags": null
  },
  "/notes/mosaic": {
    "title": "Mosaic",
    "content": "\nIn image processing, mosaicing is a method of combining or merging multiple tiles of images into a larger image ([[tessellation]]).",
    "lastmodified": "2022-09-04T11:20:34.47796906+07:00",
    "tags": null
  },
  "/notes/muons": {
    "title": "muons",
    "content": "",
    "lastmodified": "2022-09-03T21:46:45.179690733+07:00",
    "tags": null
  },
  "/notes/neutrinos": {
    "title": "neutrinos",
    "content": "Neutrinos are [fermions](https://astrosw.github.io/quartz/particle-physics/fermions) that only interact through [[notes/weak interactions|weak interactions]] and [[notes/gravity|gravity]].\n\nThey are electrically neutral and have very small rest mass.\n\n### Where are neutrinos?\n\nAlthough neutrinos are member of fermions, they cannot join the constitution of matter. They can interact only weakly and cannot be captured with other particles.",
    "lastmodified": "2022-09-03T21:46:48.492071727+07:00",
    "tags": null
  },
  "/notes/programming-exercises-MATLAB": {
    "title": "Programming Exercises (MATLAB)",
    "content": "\nWrite a computer program capable of reducing the number of intensity levels in an image from 256 to 2, in integer powers of 2. The desired number of intensity levels needs to be a variable input to your program.\n\n```\nsize = '128';\na = imread(['https://avatars.githubusercontent.com/u/103092148?v=4' size]);\nimshow(a);\ntest(rgb2gray(a));\ntest(a);\n\nfunction y = im_downgrade(img, intensity_levels)\n    y = round(img.*((intensity_levels - 1)/256));\nend\n\nfunction y = im_upgrade(img_downgraded, intensity_levels)\n    y = img_downgraded.*(256/(intensity_levels - 1));\nend\n\nfunction test(img)\n    for k = 1:8\n        levels = 2.^k;\n        img_down = im_downgrade(img, levels);\n        new_img = im_upgrade(img_down, levels);\n        imshow(new_img);\n        figure;\n        imhist(new_img);\n        figure;\n    end\nend\n```\n\nRotate the image by 45 and 90 degrees (Matlab provides simple command lines for doing this).\n\n```\nd = imread('https://avatars.githubusercontent.com/u/103092148?v=4');\nr45 = imrotate(d,45);\nimshow(r45);\nfigure;\nr90 = imrotate(d,90);\nimshow(r90);\n```",
    "lastmodified": "2022-09-03T21:46:57.281106097+07:00",
    "tags": null
  },
  "/notes/quarks": {
    "title": "quarks",
    "content": "",
    "lastmodified": "2022-09-03T21:47:03.07380482+07:00",
    "tags": null
  },
  "/notes/strong-interactions": {
    "title": "strong interactions",
    "content": "",
    "lastmodified": "2022-09-03T21:47:06.426214861+07:00",
    "tags": null
  },
  "/notes/subatomic-particles": {
    "title": "subatomic particles",
    "content": "Particles that compose an atom.\n\nA subatomic particle can be either a [[notes/composite particles|composite particle]] (made up of other particles, such as a proton, neutron, or meson) or an [[notes/elementary particles|elementary particle]] (made up of no other particles).",
    "lastmodified": "2022-09-03T21:47:09.726622268+07:00",
    "tags": null
  },
  "/notes/tauons": {
    "title": "tauons",
    "content": "",
    "lastmodified": "2022-09-03T21:47:13.407080777+07:00",
    "tags": null
  },
  "/notes/weak-interactions": {
    "title": "weak interactions",
    "content": "",
    "lastmodified": "2022-09-03T21:47:17.175554543+07:00",
    "tags": null
  },
  "/posts/NDWI-segmentation-threshold-in-image-processing": {
    "title": "NDWI Segmentation Threshold in Image Processing",
    "content": "\n# Background\n\nImage segmentation is frequently used in digital image processing and analysis to divide a digital image into a number of regions of pixels, usually based on the properties of the pixels in the image. For instance, picture segmentation might be used to distinguish between the foreground and background or to group together clusters of pixels that have a common color or shape.\n\nThresholding is a method that refers to a common approach of finding similarities between regions of an image. Here, we alter an image's pixel characteristics to make it simpler to analyze. We turn a grayscale or RGB image into a binary image (only black and white, for example). Thresholding allows us to select the areas of an image that are of interest while disregarding the other parts. For instance, using a satellite image, this technique may be used to identify areas of surface water! Isn't it interesting how we can separate and highlight water regions on a planet from satellite images? In this post, I'll give a brief overview of the principles and how ENVI and MATLAB can be used to implement it.\n\n# Principles\n\nThere are a few important concepts for segmentation thresholding using NDWI/NDVI.\n\n### Digital Number (DN)\n\nA digital image is a matrix made of pixels (picture elements). Each pixel is filled by an integer called a digital number. The digital number represents the radiance of the light measured for the pixel, and it is proportional to the radiance. A 256x256 [[posts/sampling and quantization|spatial domain]] image, for example, has 256 x 256 = 65,536 pixels, whereas a 1024x1280 image has 1,310,720 pixels. The value of each pixel in grayscale images is related to the amount of bits of data used to represent the pixel (typically 8 bits), ranging from 0 to 255 (2\u003csup\u003e8\u003c/sup\u003e = 256 grayscale levels created from combinations of 8 binary numbers: 00000000 to 11111111). If a pixel's value is represented by 16 bits, the value range is 0 to 65,535 (2\u003csup\u003e16\u003c/sup\u003e = 65,536 grayscale levels).\n\n![[images/image processing/qinghai landsat b3.png]] \n\n\u003cspan class=\"caption\" align = \"center\"\u003e \u003ci\u003eLANDSAT 8-9 image of Qinghai Lake (China) in the visible green band (Band 3) \u003c/i\u003e\u003c/span\u003e\n\nYou can have a look at the properties of this image using QGIS or many other applications.\n\n![[images/image processing/qinghai landsat b3 properties.png]]\n\nSo this is a 16-bit image, which means the value range of each pixel would be from 0 to 65,535, representing the intensity of visible green light. For this particular image, the minimum value of a pixel is 4 (not completely \"black\") and the maximum value is 65,454.\n\nIf you open this image in ENVI and access the cursor value, the number for data is the digital number of the pixel where your cursor is hovering.\n ![[images/image processing/digital number data value envi.png]]\n \u003cp align = \"center\"\u003e  \n\u003ci\u003eHere, my cursor is pointing at a pixel with a digital number of 8267\n\u003c/i\u003e\n\u003c/p\u003e\nDigital numbers correspond to the energy detected and measured at the sensor. They are connected to surface reflectance values, but they are NOT the same! Using DNs collected by satellite without adjusting for atmospheric effects as light passes through the atmosphere may result in many problems!\n\nThen what do we use instead?\n\n### Top of Atmosphere (TOA)\n\nRemote sensing tools directly measure radiance. This includes radiation reflected from the surface, as well as radiation reflected from nearby pixels, and perhaps most significantly, radiation reflected from clouds! Furthermore, radiance is affected not only by the intensity and direction of the target's illumination, but also by its orientation and position.\n\n*Read more about the energy transfer in the atmosphere through my posts on [[subjects/climatenweather|climate and weather]]*\n\n![[images/image processing/reflectance through atmosphere.png]]\n\n![[images/image processing/diffuse_v_specular.png]]\n\nIn other words, the travel of light in the atmosphere is influenced by a variety of elements as it goes down to the Earth through the atmosphere, diffusively reflects off the Earth's surface, and then returns up through the atmosphere, suffering from scattering effects. Thus, instead of the digital number, we would determine the Top of Atmosphere (TOA) reflectance values, which can be estimated mainly from radiance leaving the ground, transmission factors and path radiance.\n\nReflectance values range from 0 to 1 and are stored in floating point data format. With ENVI, you can easily convert Landsat optical band data from the USGS in the \"USGS GeoTIFF with Metadata\" format to TOA reflectance values when you open the USGS file that ends with \"MLT.TXT\". More details can be found in Section 1 of [this page](https://yceo.yale.edu/how-convert-landsat-dns-top-atmosphere-toa-reflectance?fbclid=IwAR0UbHmDqOGd6FrrCxYh7CcCTHtwFZ7u6wJhEyMscWnD3wUHrUHSWIYjFVo).\n\nThe metadata file \"MLT.TXT\"  provides rescaling factors and parameters that can be used to manually convert Landsat data to TOA reflectance with the following formula, using the tool **Band Math**.\n\n$$\\rho_\\lambda = \\dfrac{M_\\rho Q_{cal}+A_\\rho}{cos(\\theta_{SZ})} = \\dfrac{M_\\rho Q_{cal}+A_\\rho}{sin(\\theta_{SE})}$$\nwhere:\n- $M_\\rho$ is the band-specific multiplicative rescaling factor (REFLECTANCE_MULT_BAND_x in the metadata, where x is the band number).\n- $A_\\rho$ is the band-specific additive rescaling factor (REFLECTANCE_ADD_BAND_x).\n- $Q_{cal}$ is the quantized and calibrated standard product pixel values (digital number DN).\n- $M_\\rho Q_{cal} + A_\\rho$ is then the TOA planetary reflectance without correction for solar angle.\n- $\\theta_{SE}$ is the local sun elevation angle (SUN_ELEVATION)\n- $\\theta_{SZ}$ is the local solar zenith angle; $\\theta_{SZ}=90\\degree-\\theta_{SE}$\n\nAnd below is the result I got after converting from DN to TOA. You can see that the cursor value for data has changed. Its range (originally 0 to 65,535) is now from -1 to 1.\n\n![[images/image processing/qinghai landsat TOA b3.png]]\n\n### NDVI and NDWI\n\nNDVI stands for Normalized Difference Vegetation Index and NDWI stands for Normalized Difference Water Index.\n\nNDVI is used to quantify vegetation greenness and is useful in understanding vegetation density. Vegetation is quantified by measuring the difference between near-infrared (which vegetation strongly reflects) and red light (which vegetation absorbs).\n\n$$NDVI = \\dfrac{NIR - Red}{NIR+Red}$$\n\nOn the other hand, NDWI is used to monitor changes related to water content in water bodies. As water bodies strongly absorb light in visible to infrared electromagnetic spectrum, NDWI uses green and near-infrared bands to hightlight water bodies.\n\n$$NDWI = \\dfrac{Green - NIR}{Green +NIR}$$\n\n![[images/image processing/bands_reflectance.png]]\n\nFrom the above figure, it is apparent that reflection in **NIR** wavelength over water bodies is **lower** than reflection in the **Red** wavelength. As a result, **water bodies** will have ***negative NDVI*** values. On the contrary, reflection in **Green** wavelength over water bodies is **higher** than reflection in **NIR** wavelength. Thus, **water bodies** will have ***positive NDWI*** values.\n\nFor Landsat 8, band 3 represents visible green light, band 4 represents visible red light and the near-infrared is shown in band 5. Therefore, for Landsat 8 data, we can calculate the NDVI and NDWI like below:\n\n$$NDVI = \\dfrac{B5-B4}{B5+B4}$$\n$$NDWI = \\dfrac{B3-B5}{B3+B5}$$\nUsing the NDVI tool on a layerstacked image (for example, layerstacking band 3 and band 5 to calculate NDWI), we can obtain the following result:\n\n![[images/image processing/qinghai landsat ndwi35 water.png]]\n \u003cp align = \"center\"\u003e  \n\u003ci\u003eThe cursor is hovering over Qinghai lake so we have positive NDWI value (I imported the NDWI file into the blue band)\n\u003c/i\u003e\n\u003c/p\u003e\n![[images/image processing/qinghai landsat ndwi35 nonwater.png]]\n \u003cp align = \"center\"\u003e  \n\u003ci\u003eThe cursor is hovering over non-water area so we have negative NDWI value\n\u003c/i\u003e\n\u003c/p\u003e\nAnd now we're almost done with the processes using ENVI! For further processing in MATLAB, we need to convert the map projection from UTM to **Geographic Lat/Lon**, using **Map| Convert Map Projection**, and then save the file as TIFF/GeoTIFF.\n\nI will write another post for detailed explanation on the MATLAB scripts for extracting water bodies from the NDWI image obtained, and also removing cloud-covered pixels using the BQA file.\n\n![[images/image processing/Histogram_NDWI.jpg]]\n\n![[images/image processing/NDWI_LANDSAT.jpg]]\n\n![[images/image processing/Surface_Water_LANDSAT_NDWI.jpg]]\n",
    "lastmodified": "2022-11-30T13:28:23.016792782+07:00",
    "tags": null
  },
  "/posts/case-study-estimating-heat-transfer-of-a-lake": {
    "title": "[Case Study] Estimating Heat Transfer of a lake",
    "content": "\nGithub link: https://github.com/thdngan/case-studies/tree/main/spline_heattransfer\n\n## Background\n\nThe grouping of something into various categories is known as stratification. When two kinds of steam that are at different temperatures come into contact, thermal stratification happens. The warmer, lighter water may float above the colder water because of the difference in temperature between them, which causes the heavier, colder water to sink to the bottom. Summertime thermal stratification is a phenomenon in temperate zone lakes. The warm, buoyant surface water is on top of the cooler, denser bottom water, as seen in the figure below. The *epilimnion* and the *hypolimnion*, which are separated by a plane known as the *thermoline*, are the two layers that are effectively separated vertically as a result of this stratification.\n\n![[images/case studies/spline_heattransfer/temperaturevsdepth.jpg]]\n\nFor environmental engineers researching the contamination of such systems, thermal stratification is of major importance. Particularly, mixing between the two levels is significantly reduced by the thermocline. Decomposition of organic debris can therefore cause a serious reduction in oxygen levels in the secluded bottom waters.\n\nThe temperature-depth curve's inflection point can be used to determine the thermocline's position - that is, the point at which $d^2T/dx^2=0$. Additionally, it is the point where the first derivative's or gradient's absolute value is at its highest. In this case study, the thermocline depth for Platte Lake and the gradient's magnitude will be calculated using cubic splines.\n\n## Solution\n\nSince I don't have all the data, the results are basically just approximations and not really aesthetically pleasing. However, they do approach the desired values rather closely.\n\nIn order to display the spline predictions and first and second derivatives at intervals of 1 meter down into the water column, I first interpolated using the available limited data. I then plotted the second derivative, gradient, and temperature versus depth.\n\n```MATLAB\nT = [11.1 11.1 11.7 13.9 20.6 22.8 22.8 22.8];\n\nz = [27.2 22.9 18.3 13.7 9.1 4.9 2.3 0];\n\n%% interpolating\n\nzq = 0:1:28;\n\nTq = interp1(z, T, zq);\n\ndTdz = gradient(Tq(:)) ./ gradient(zq(:));\n\nd2Tdz2 = gradient(dTdz(:)) ./ gradient(zq(:));\n\nfor i = 1:29\n\nif (abs(dTdz(i)) == max(abs(dTdz)))\n\ndisp(zq(i));\n\ndisp(dTdz(i));\n\ndisp(d2Tdz2(i));\n\nhor = zq(i);\n\nend\n\nend\n\n%% temperature\n\nsubplot(1,3,1)\n\naxis([0 30 0 30]);\n\nxticks([0 10 20 30]);\n\nyticks([0 10 20 30]);\n\nplot(T,z,\"o\",'Color',[1 0 0]);\n\nyline(hor,\":\");\n\ntitle('(a) Temperature vs Depth');\n\nxlabel('T (°C)');\n\nylabel('z (m)');\n\nset(gca,'XAxisLocation','top','YAxisLocation','left')\n\naxis(gca,'ij')\n\n%% gradient\n\nsubplot(1,3,2)\n\naxis([-2.0 1.0 0 30]);\n\nxticks([-2.0 -1.0 0.0 1.0]);\n\nyticks([0 10 20 30]);\n\nplot(dTdz,zq);\n\nyline(hor,\":\");\n\ntitle('(b) Gradient vs Depth');\n\nxlabel('dT/dz');\n\nset(gca,'XAxisLocation','top','YAxisLocation','left')\n\naxis(gca,'ij')\n\n%% second derivative\n\nsubplot(1,3,3)\n\naxis([-0.5 0.5 0 30]);\n\nxticks([-0.5 0.0 0.5]);\n\nyticks([0:5:30]);\n\nplot(d2Tdz2,zq);\n\n% pbaspect manual;\n\nyline(hor,\":\");\n\ntitle('(c) Second derivative vs Depth');\n\nxlabel('d2T/dz2');\n\nset(gca,'XAxisLocation','top','YAxisLocation','left')\n\naxis(gca,'ij')\n```\n\nThe depth is 12m and the gradient of this point is -1.46 °C/m.\n\n```\n\u003e\u003e spline_heattransfer\n    12\n\n  -1.456521739130436\n\n   0.073369565217392\n```\n\nThe temperature-depth curve inflection point is where the thermoline is located. I searched for the thermoline based on the highest absolute value of the derivative in this case, since it appears to be unique in this particular situation and much simpler to deal with than zero second derivatives.\n \n![[images/case studies/spline_heattransfer/spline_heattransfer.jpg]]",
    "lastmodified": "2022-11-25T01:45:04.445094747+07:00",
    "tags": null
  },
  "/posts/case-study-greenhouse-gases-and-rainwater": {
    "title": "[Case Study] Greenhouse gases and rainwater",
    "content": "\nGithub link: https://github.com/thdngan/case-studies\n\n## Background:\n\nSeveral greenhouse gases have shown an increase in atmospheric concentration during the past 50 years, as is widely known. Let's examine the information on carbon dioxide partial pressure ($CO_2$) that was acquired at Mauna Loa, Hawaii, from 1958 to 2003. A quadratic polynomial may be used to fit the data trend neatly,\n$$p_{CO_2} = 0.011825(t - 1980.5)^2+1.356975(t-1980.5) + 339$$\nwhere $p_{CO_2}$ is the atmospheric $CO_2$ partial pressure (ppm). According to the data, $CO_2$ levels increased by more than 19% from 315 to 376 ppm.\n\nIn addition to contributing to global warming, greenhouse gases may alter the chemistry of the atmosphere. How the rise in carbon dioxide is influencing rainwater's pH is one issue we can solve. It is generally known that carbon dioxide is the main factor of the pH of the rain outside of urban and industrial regions. The activity of hydrogen ions, and hence the acidity of a solution, are measured by pH. It may be calculated as follows for diluted aqueous solutions:\n\n$$pH = -log_{10}[H^+]\\tag*{(1)}$$\nwhere $[H^+]$ is the molar concentration of hydrogen ions.\n\nThe chemistry of rainfall is governed by the following five nonlinear systems of equations:\n\n$$K_1 = 10^6\\dfrac{[H^+][HCO_3^-]}{p_{CO_2}K_H}\\tag*{(2)}$$\n$$K_2 = \\dfrac{[H^+][CO_3^{2-}]}{[HCO_3^-]}\\tag*{(3)}$$\n$$K_w = [H^+][OH^-]\\tag*{(4)}$$\n$$c_T = \\dfrac{p_{CO_2}K_H}{10^6} + [HCO_3^-] + [CO_3^{2-}]\\tag*{(5)}$$\n$$[HCO_3^-] + 2[CO_3^{2-}] + [OH^-] - [H^+] = 0\\tag*{(6)}$$\nwhere $K_1$, $K_2$ and $K_w$ are equilibrium coefficients, and $K_H$ is Henry's constant. The five unknown values are $c_T$ - total inorganic carbon, $[HCO_3^-]$ - bicarbonate, $[CO_3^{2-}]$ - carbonate, $[H^+]$ - hydrogen ion, and $[OH^-]$ - hydroxyl ion. Keep in mind that equations (2) and (5) both display the partial pressure of $CO_2$.\n\nNow, we will apply these equations to determine the pH of rainwater given that $K_H=10^{-1.46}$, $K_1=10^{-6.3}$, $K_2=10^{-10.3}$, and $K_w=10^{-14}$. Then we will compare the results in 1958 when $p_{CO_2}=315[ppm]$ and in 2003 when $p_{CO_2}=375 [ppm]$.\n\nAdditionally, there are two criteria for choosing a numerical method for computation:\n- You can be certain that rain in pristine places always ranges in pH from 2 to 12.\n- You are also informed that the precision of your pH measurements is just two decimal places.\n\n---\n## Solution:\n\nTo begin, we may eliminate the unknown values by combining them into a single function that is solely dependent on $[H^+]$.\n\nFrom (2): $$[HCO_3^-] = \\dfrac{p_{CO_2}K_HK_1}{10^6[H^+]}\\tag*{(7)}$$\nFrom (3) and (7):\n$$[CO_3^{2-}] = \\dfrac{p_{CO_2}K_HK_1K_2}{10^6[H^+]^2}\\tag*{(8)}$$\nSubstitute (7), (8) and (4) into (6), we have:\n$$\\dfrac{p_{CO_2}K_HK_1}{10^6[H^+]} + 2\\dfrac{p_{CO_2}K_HK_1K_2}{10^6[H^+]^2} + \\dfrac{K_w}{[H^+]} - [H^+] = 0\\tag*{(9)}$$\nIt might not be instantly evident, but this result is a third-order polynomial in $[H^+]$. Its root may therefore be used to determine the pH of rainwater.\n\nNext, choose the numerical method that will be applied to find the answer. Bisection would be a wise decision for two reasons. First, the fact that the pH typically falls between 2 and 12 gives us two reliable first guesses. Second, we will accept an absolute error of $E_{a,d} = 0.005$ as the pH can only be measured to two decimal places of precision. Keep in mind that we may calculate the number of iterations a priori given an initial bracket and the desired relative error. Using $n = log_2(\\dfrac{\\Delta x^0}{E_{a,d}})$, the result is $n = log_2(\\dfrac{12-2}{0.005}) \\approx 10.9658$. Bisection will therefore give the required precision after eleven iterations.\n\nPrior to applying equation (9) to MATLAB, we must make a few adjustments in order. The left-handed side of (9) must be rewritten as a function of pH since we want to use the range from 2 to 12 with 11 iterations.\n\n![[images/climate modeling/bisection_greenhousegases_rainwater.svg]]\n\nNow we can substitute $p_{CO_2}=315$ and $p_{CO_2}=375$ to the MATLAB script below:\n\n```MATLAB\n% Bisection method to compute the impact of change in atmospheric CO2\n\n% levels in the pH of rainwater.\n\nclc\n\nclear all\n\nclose all\n\na=input('Enter function with right hand side zero:','s');\n\n% This is the function I use for 1958: 315*10^(-13.76+x)+10^(-14+x)+630*10^(-24.06+2*x)-10^(-x)\n\n% This is the function I use for 2003: 375*10^(-13.76+x)+10^(-14+x)+750*10^(-24.06+2*x)-10^(-x)\n\nf=inline(a);\n\nxl=input('Enter the first value of guess interval:');\n\nxu=input('Enter the end value of guess interval:');\n\nfor i=2:12 % 11 iterations\n\nfprintf(\"\\nIteration %i:\",i-1);\n\nxr=(xu+xl)/2;\n\nfprintf(\"xr=%i\",xr);\n\nif f(xu)*f(xr)\u003c0\n\nxl=xr;\n\nelse\n\nxu=xr;\n\nend\n\nfprintf(\" =\u003e new xl=%i\",xl);\n\nfprintf(\", xu=%i\",xu);\n\nif f(xl)*f(xr)\u003c0\n\nxu=xr;\n\nelse\n\nxl=xr;\n\nend\n\nxnew(1)=0;\n\nxnew(i)=xr;\n\nea=abs((xnew(i)-xnew(i-1))/xnew(i))*100;\n\nfprintf(\", ea=%f percent\\n\",ea);\n\nend\n\nfprintf(\"\\n\\nThe root of the equation is %i\\n\",xr);\n\nfprintf(\"\\nThe relative error is is %i percent\\n\",ea);\n```\n\nThe result for 1958 will be a pH of 5.6279 with a relative error of 0.0868%. \n\n```\nEnter function with right hand side zero:315*10^(-13.76+x)+10^(-14+x)+630*10^(-24.06+2*x)-10^(-x)\nEnter the first value of guess interval:2\nEnter the end value of guess interval:12\n\nIteration 1:xr=7 =\u003e new xl=2, xu=7, ea=100.000000 percent\n\nIteration 2:xr=4.500000e+00 =\u003e new xl=4.500000e+00, xu=7, ea=55.555556 percent\n\nIteration 3:xr=5.750000e+00 =\u003e new xl=4.500000e+00, xu=5.750000e+00, ea=21.739130 percent\n\nIteration 4:xr=5.125000e+00 =\u003e new xl=5.125000e+00, xu=5.750000e+00, ea=12.195122 percent\n\nIteration 5:xr=5.437500e+00 =\u003e new xl=5.437500e+00, xu=5.750000e+00, ea=5.747126 percent\n\nIteration 6:xr=5.593750e+00 =\u003e new xl=5.593750e+00, xu=5.750000e+00, ea=2.793296 percent\n\nIteration 7:xr=5.671875e+00 =\u003e new xl=5.593750e+00, xu=5.671875e+00, ea=1.377410 percent\n\nIteration 8:xr=5.632812e+00 =\u003e new xl=5.593750e+00, xu=5.632812e+00, ea=0.693481 percent\n\nIteration 9:xr=5.613281e+00 =\u003e new xl=5.613281e+00, xu=5.632812e+00, ea=0.347947 percent\n\nIteration 10:xr=5.623047e+00 =\u003e new xl=5.623047e+00, xu=5.632812e+00, ea=0.173671 percent\n\nIteration 11:xr=5.627930e+00 =\u003e new xl=5.627930e+00, xu=5.632812e+00, ea=0.086760 percent\n\n\nThe root of the equation is 5.627930e+00\n\nThe relative error is is 8.676037e-02 percent\n```\n\nThe answer of 5.63, when rounded, is undoubtedly accurate to two decimal places. This may be confirmed by carrying out a second test with more iterations. A result of 5.630439, for instance, is produced after 40 iterations, with a relative error of around $1.62×10^{-10}$%.\n\n```\nEnter function with right hand side zero:315*10^(-13.76+x)+10^(-14+x)+630*10^(-24.06+2*x)-10^(-x)\nEnter the first value of guess interval:2\nEnter the end value of guess interval:12\n\nIteration 1:xr=7 =\u003e new xl=2, xu=7, ea=100.000000 percent\n\nIteration 2:xr=4.500000e+00 =\u003e new xl=4.500000e+00, xu=7, ea=55.555556 percent\n\nIteration 3:xr=5.750000e+00 =\u003e new xl=4.500000e+00, xu=5.750000e+00, ea=21.739130 percent\n\nIteration 4:xr=5.125000e+00 =\u003e new xl=5.125000e+00, xu=5.750000e+00, ea=12.195122 percent\n\nIteration 5:xr=5.437500e+00 =\u003e new xl=5.437500e+00, xu=5.750000e+00, ea=5.747126 percent\n\nIteration 6:xr=5.593750e+00 =\u003e new xl=5.593750e+00, xu=5.750000e+00, ea=2.793296 percent\n\nIteration 7:xr=5.671875e+00 =\u003e new xl=5.593750e+00, xu=5.671875e+00, ea=1.377410 percent\n\nIteration 8:xr=5.632812e+00 =\u003e new xl=5.593750e+00, xu=5.632812e+00, ea=0.693481 percent\n\nIteration 9:xr=5.613281e+00 =\u003e new xl=5.613281e+00, xu=5.632812e+00, ea=0.347947 percent\n\nIteration 10:xr=5.623047e+00 =\u003e new xl=5.623047e+00, xu=5.632812e+00, ea=0.173671 percent\n\nIteration 11:xr=5.627930e+00 =\u003e new xl=5.627930e+00, xu=5.632812e+00, ea=0.086760 percent\n\nIteration 12:xr=5.630371e+00 =\u003e new xl=5.630371e+00, xu=5.632812e+00, ea=0.043361 percent\n\nIteration 13:xr=5.631592e+00 =\u003e new xl=5.630371e+00, xu=5.631592e+00, ea=0.021676 percent\n\nIteration 14:xr=5.630981e+00 =\u003e new xl=5.630371e+00, xu=5.630981e+00, ea=0.010839 percent\n\nIteration 15:xr=5.630676e+00 =\u003e new xl=5.630371e+00, xu=5.630676e+00, ea=0.005420 percent\n\nIteration 16:xr=5.630524e+00 =\u003e new xl=5.630371e+00, xu=5.630524e+00, ea=0.002710 percent\n\nIteration 17:xr=5.630447e+00 =\u003e new xl=5.630371e+00, xu=5.630447e+00, ea=0.001355 percent\n\nIteration 18:xr=5.630409e+00 =\u003e new xl=5.630409e+00, xu=5.630447e+00, ea=0.000678 percent\n\nIteration 19:xr=5.630428e+00 =\u003e new xl=5.630428e+00, xu=5.630447e+00, ea=0.000339 percent\n\nIteration 20:xr=5.630438e+00 =\u003e new xl=5.630438e+00, xu=5.630447e+00, ea=0.000169 percent\n\nIteration 21:xr=5.630443e+00 =\u003e new xl=5.630438e+00, xu=5.630443e+00, ea=0.000085 percent\n\nIteration 22:xr=5.630440e+00 =\u003e new xl=5.630438e+00, xu=5.630440e+00, ea=0.000042 percent\n\nIteration 23:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630440e+00, ea=0.000021 percent\n\nIteration 24:xr=5.630440e+00 =\u003e new xl=5.630439e+00, xu=5.630440e+00, ea=0.000011 percent\n\nIteration 25:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000005 percent\n\nIteration 26:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000003 percent\n\nIteration 27:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000001 percent\n\nIteration 28:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000001 percent\n\nIteration 29:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 30:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 31:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 32:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 33:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 34:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 35:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 36:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 37:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 38:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 39:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\nIteration 40:xr=5.630439e+00 =\u003e new xl=5.630439e+00, xu=5.630439e+00, ea=0.000000 percent\n\n\nThe root of the equation is 5.630439e+00\n\nThe relative error is is 1.615318e-10 percent\n```\n\nThe same calculation may be carried out again for the conditions in 2003, yielding a pH value of 5.59 with a relative error of 0.0874%.\n\n```\nEnter function with right hand side zero:375*10^(-13.76+x)+10^(-14+x)+750*10^(-24.06+2*x)-10^(-x)\nEnter the first value of guess interval:2\nEnter the end value of guess interval:12\n\nIteration 1:xr=7 =\u003e new xl=2, xu=7, ea=100.000000 percent\n\nIteration 2:xr=4.500000e+00 =\u003e new xl=4.500000e+00, xu=7, ea=55.555556 percent\n\nIteration 3:xr=5.750000e+00 =\u003e new xl=4.500000e+00, xu=5.750000e+00, ea=21.739130 percent\n\nIteration 4:xr=5.125000e+00 =\u003e new xl=5.125000e+00, xu=5.750000e+00, ea=12.195122 percent\n\nIteration 5:xr=5.437500e+00 =\u003e new xl=5.437500e+00, xu=5.750000e+00, ea=5.747126 percent\n\nIteration 6:xr=5.593750e+00 =\u003e new xl=5.437500e+00, xu=5.593750e+00, ea=2.793296 percent\n\nIteration 7:xr=5.515625e+00 =\u003e new xl=5.515625e+00, xu=5.593750e+00, ea=1.416431 percent\n\nIteration 8:xr=5.554688e+00 =\u003e new xl=5.554688e+00, xu=5.593750e+00, ea=0.703235 percent\n\nIteration 9:xr=5.574219e+00 =\u003e new xl=5.574219e+00, xu=5.593750e+00, ea=0.350385 percent\n\nIteration 10:xr=5.583984e+00 =\u003e new xl=5.583984e+00, xu=5.593750e+00, ea=0.174886 percent\n\nIteration 11:xr=5.588867e+00 =\u003e new xl=5.588867e+00, xu=5.593750e+00, ea=0.087367 percent\n\n\nThe root of the equation is 5.588867e+00\n\nThe relative error is is 8.736677e-02 percent\n```\n\nIt's interesting that these results show that the 19% increase in atmospheric $CO_2$ levels has only resulted in a pH decrease of 0.67%. Although this is undoubtedly true, keep in mind that equation (1) describes the pH as a logarithmic scale. As a result, a pH change of one unit corresponds to a 10-fold increase in hydrogen ions. The concentration can be determined using the formula $[H^+] = 10^{-pH}$, with a resultant percent change of 9.1%. Consequently, there has been a 9% rise in the hydrogen ion concentration.\n\n",
    "lastmodified": "2022-11-22T19:10:55.081097665+07:00",
    "tags": null
  },
  "/posts/greenhouse-effect": {
    "title": "Layer Model with Greenhouse Effect",
    "content": "\n\n\n## Explanation\n\n![[images/climate modeling/greenhouseeffect1.svg]]\nThe figure above depicts the previously described [[posts/naked planet climate model|first basic climate model with bare-rock surface]]. The incoming energy budget is represented by $L(1 - \\alpha)/4$ in the figure, where L is the solar constant, α is the albedo of Earth, and number 4 represents the geometry of the system (we're considering the entire planet, so it's a sphere, keep this in mind because we'll deal with different problems that consider different conditions). This energy would be balanced by the energy that leaves the system, as indicated by $\\epsilon \\sigma T^4_{ground}$, where ε, σ and T are the emissivity of Earth, the Stefan-Boltzmann constant, and the Earth's ground temperature, respectively.\n\nHowever, we discovered that the given model is rather cold in comparison to real-world values. This is due mostly to the presence of [[posts/greenhouse gases|greenhouse gases]] in the atmosphere, which absorb and emit radiation as well.\n\nFor the sake of simplicity, imagine all of the gases that absorb and emit as a pane of glass in the atmosphere. In this layer model, the atmosphere is assumed to be a blackbody in the infrared that absorbs and emits all frequencies of infrared light.\n\n![[images/climate modeling/greenhouseeffect2.svg]]\nWe will also make the following assumptions for this model:\n\n- The pane of glass does not absorb sunlight.\n- The glass absorbs infrared radiated by the earth.\n- The glass pane itself emits infrared light in both directions, up and down, according to its own temperature T\u003csub\u003ea\u003c/sub\u003e.\n\nWe can then obtain some formulae for the various types of energy in the model:\n\n- $\\dfrac{L(1 - \\alpha)}{4}$ is the incoming energy budget that the ground absorbs.\n\u003cbr\u003e\u003c/br\u003e\n- $\\epsilon \\sigma T^4_{g}$ represents energy emitted by the ground.\n\u003cbr\u003e\u003c/br\u003e\n- $\\epsilon \\sigma T^4_a$ represents energy absorbed and emitted by the pane of glass (assuming that the glass has good [[notes/blackbody|blackbody]] properties, ε ≈ 1)\n\nThen we get the following table for the energy budgets that enter and exit the system:\n\n|Energy budget|IN|OUT|\n|------|:----:|:----:|\n|Ground|$\\dfrac{L(1 - \\alpha)}{4}+\\epsilon \\sigma T^4_a$|$\\epsilon \\sigma T^4_g$|\n|Atmosphere|$\\epsilon \\sigma T^4_g$|$2\\epsilon \\sigma T^4_a$|\n\nTo get the energy budget for the Earth system overall, we could add them up and obtain: $$\\dfrac{L(1 - \\alpha)}{4} = \\epsilon \\sigma T^4_a$$\n\nHowever, there is a simpler, much less complicated solution: create a general budget that depicts the whole system. We may draw a line above the atmosphere representing the border to space (as depicted in the figu  re). And the results would be the same as what we obtained previously.\n\n|Energy budget|IN|OUT|\n|------|:----:|:----:|\n|Overall System|$\\dfrac{L(1 - \\alpha)}{4}$|$\\epsilon \\sigma T^4_a$|\n\nThis is still not close to reality, of course. It turns out that the atmosphere cannot be assumed as a blackbody in the infrared that absorbs and emits all frequencies of infrared light. In fact, gases absorbs infrared light selectively, and most gases in the atmosphere doesn't interact with IR light at all.\n\n## Problems:\n\n### How hot is The Moon?\nThe layer model assumes that the temperature of the body in space is all the same. This isn't really very accurate, as you know that it's colder at the poles than it is at the equator. For a bare rock with no atmosphere or ocean, like the moon, the situation is even worse, because fluids like air and water are how heat is carried around on the planet. So let's make the other extreme assumption, that there is no heat transport on a bare rock like the moon. Assume for comparability that the albedo of this world is 0.33, and the solar constant is 1350 Watts/m2, same as for Earth.\n\na) What would be the equilibrium temperature of the surface of the moon, where influx equals outflux, on the equator, at local noon, when the sun is directly overhead, in Kelvins?\n\n![[images/climate modeling/greenhouseeffect3.svg]]\n*Since the assumption is that the moon's surface is bare rock with no atmosphere or ocean, we can use the simple model for bare-rock layer on the equator at local noon (where the location in consideration is perpendicular to the sunlight direction). As we only want to find the temperature at the equator, not on the whole spherical surface, we can ignore the geometric quantity.*\n\n*We have: L = 1350 W/m\u003csup\u003e2\u003c/sup\u003e, α = 0.33.*\n\n*The equilibirum equation for energy:* $$E_{in} = E_{out}$$\n$$L(1-\\alpha)=\\epsilon \\sigma T^4_g$$\n$$T_g\\approx 355.4$$\nb) What would be the equilibrium temperature, where energy outflow equals energy inflow, on the moon at night, in Kelvins?\n\n*At night there is no sunlight directed towards the surface, so basically no energy flow. The temperature would be 0K.*\n\n### A Stronger Greenhouse Effect\nInsert another atmospheric layer into the model, just like the first one.\n![[images/climate modeling/greenhouseeffect4.svg]]\n*Arrow a represents the energy inflow and arrow f represents the energy outflow of the overall system. We have:*\n$$\\dfrac{L(1-\\alpha)}{4}=\\epsilon \\sigma T^4_{layer2}$$\n$$T_{layer2}=254.1K$$\n*Similarly, the energy budget of layer 2 at equilibrium:*\n$$\\epsilon \\sigma T^4_{layer1}=2\\epsilon \\sigma T^4_{layer2}$$\n$$(\\dfrac{T_{layer1}}{T_{layer2}})^4=2$$\n$$\\dfrac{T_{layer1}}{T_{layer2}}=2^{1/4}$$\n*Energy budget for layer 1:*\n$$\\epsilon \\sigma(T^4_g+T^4_{layer2})=2\\epsilon \\sigma T^4_{layer1}$$\n$$\\dfrac{T^4_g+T^4_{layer2}}{T^4_{layer1}}=2$$\n$$(\\dfrac{T_g}{T_{layer1}})^4=2-(\\dfrac{T_{layer2}}{T_{layer1}})^4=2-\\dfrac{1}{2}=\\dfrac{3}{2}$$\n### Nuclear Winter\nGo back to the 1-layer model, but change it so that the atmospheric layer absorbs visible light rather than allowing to pass through.\n![[images/climate modeling/greenhouseeffect5.svg]]\nThis could happen if the upper atmosphere were filled with dust. For simplicity, assume that the albedo of the earth remains at 30%, even though in the real world it might change with a dusty atmosphere. What is the ratio of T\u003csub\u003eg\u003c/sub\u003e / T\u003csub\u003ea\u003c/sub\u003e in this case?\n\n*The answer is 1. We can see that the energy budget for the Earth at equilibrium would be:*\n$$\\epsilon \\sigma T^4_g=\\epsilon \\sigma T^4_a$$\n*So apparently,* $T_g=T_a$.",
    "lastmodified": "2022-11-05T21:57:07.392099962+07:00",
    "tags": null
  },
  "/posts/greenhouse-gases": {
    "title": "The physics of greenhouse gases",
    "content": "\n",
    "lastmodified": "2022-10-22T17:13:20.201521113+07:00",
    "tags": null
  },
  "/posts/heat": {
    "title": "What is heat and how can you warm up something in space",
    "content": "\n\n\n## What is heat?\nHeat is defined in thermodynamics as energy transferred to or from a thermodynamic system by methods other than thermodynamic work or matter transfer (e.g. radiation, conduction, convection).\n\nHeat is an expression of the kinetic energy of the atoms in a material. We experience heat when atoms are traveling very swiftly, and cold when they are moving very slowly. You can't feel individual atoms, just large groups of atoms. And yet, you can feel how that atom is jiggling rapidly because if you touch it, the fast jiggling of the atoms would brush up against the atoms of your skin, making them jiggle faster as well. If they bounce too fast, they can actually pull away the chemical bonds in your skin, causing you to burn yourself. That's why we've evolved to be able to detect how quickly atoms move. It's as if we had little atomic speedometers at our fingers.\n\nEach atomic mode of motion has approximately 1/2 KT of energy. This is how the temperature is truly defined. The temperature is denoted by the letter T. The Boltzmann constant is denoted by the letter K. So, suppose you have a gas made up of single atoms. Because physical space has three dimensions, a single atom gas like this has 3/2 KT of energy, one for each of the three dimensions of physical space.\n\nThen consider a molecule like oxygen, one of the principal gases in our environment. O\u003csub\u003e2\u003c/sub\u003e contains two atoms that can vibrate relative to one other. This vibration creates another mode of motion (vibrational mode) in which the molecule can transport heat. And the fact that it's now a line rather than a point implies that it may spin. And because this atom has two distinct rotational dimensions, it also has two rotation modes. So we have three modes for each atom in the molecule, for a total energy of 6/2 KT.\n\n## How can you warm up something in space?\nAs previously stated, there are three primary ways of heat transfer in the universe: conduction, convection, and radiation.\n\n- Conduction happens when neighboring atoms and molecules interact, delivering energy to their neighbors. This occurs mostly within a solid and between solid objects that are in thermal contact. It's the heat you feel when you place your palm on a window pane on sunny days.\n- Convection is the flow of fluid that transfers heat from one location to another. Convection is generally described as a separate mechanism of heat transfer, although it really incorporates the combined processes of conduction and [[advection]] (heat transfer by bulk fluid flow). Convection is the most common form of heat transmission in liquids and gases.\n- Radiation is produced when heat from the thermal motion of particles in matter is transformed to electromagnetic radiation. It's the heat you feel on your face when you're near to a fire. Thermal radiation is emitted by all stuff that has a temperature higher than [[absolute zero]]. Sunshine, or solar radiation, is thermal radiation emitted by the sun's very hot gasses, which heats our planet.\n\nBecause there is no air in space, convection cannot occur. Convection needs a fluid flow, which the vacuum of space precludes. That leaves conduction and radiation. You may either connect a hot object to the thing you wish to warm up or employ some type of electromagnetic radiation, such as rotating the object toward the Sun.",
    "lastmodified": "2022-11-05T21:57:42.252050492+07:00",
    "tags": null
  },
  "/posts/naked-planet-climate-model": {
    "title": "Naked Planet Climate Model",
    "content": "\n\n![[images/climate modeling/naked planet climate model.svg]]\n\n\nThe figure above depicts the most basic types of energy for a simple climate model. We have sunlight coming from the Sun in one direction, towards the Earth. This sunlight would represent the energy entering the climate model of Earth. The energy emitted would be infrared radiation from the Earth. Our planet is assumed to have a naked rock surface, with no consideration given to the effects of atmospheric layers and greenhouse gases, convection, and latent heat (yet).\n\nBased on this model, we wish to determine the temperature of the Earth. So, where do we proceed from here? We always want our model to be in equilibrium, which means that the total energy going out equals the total energy coming in!\n$$E_{in} = E_{out}\\tag*{(*)}$$\n\nThe energy coming out of Earth can be calculated using the Stefan-Boltzmann formula:\n$$E_{out} = \\epsilon\\sigma T^4A\\tag*{(1)}$$\nwhere \n- σ ≈ 5.67 x 10\u003csup\u003e-8\u003c/sup\u003e (Wm\u003csup\u003e-2\u003c/sup\u003eK\u003csup\u003e-4\u003c/sup\u003e) is the Stefan-Boltzmann constant,\n- T is the Earth's temperature (we are assuming the temperature is the same generally because this is a very simple model)\n- A = 4πR\u003csup\u003e2\u003c/sup\u003e is the surface area of the planet (a sphere)\n- ε ≈ 1 is the emissivity of the Earth (most condensed matter has pretty good [[notes/blackbody|blackbody]] properties, the **EXCEPTION** for this, which we will consider later in more complex models, is the existence of [[posts/greenhouse gases|greenhouse gases]]).  \n\nFor the other side of the equation, we need to calculate the energy coming in from the Sun.\n$$E_{in} = L(1 - \\alpha)A\\tag*{(2)}$$\nwhere\n- L ≈ 1350 (W/m\u003csup\u003e2\u003c/sup\u003e) is the power of the Sun per unit area of the planet Earth. It is the brightness of the sunlight as viewed straight on from the Sun to the Earth. However, not all of that energy is absorbed as heat by the Earth. Some of it is reflected back into space and is never absorbed.\n- That fraction is represented in the [[notes/albedo|albedo]] α ≈ 0.3, which indicates the fraction of the sun's radiation reflected by the Earth's surface. So (1 - α) is the fraction absorbed by the surface. A number of 1 indicates that the planet's surface is a perfect mirror, absorbing nothing. A value of 0 implies that the planet's surface is a perfect absorber and does not reflect anything.\n- Now what is A here? So we have L(1 - α) in watts per square meter of solar energy arriving, and we need to multiply that by an area to obtain the total energy arriving. It may become more difficult if we consider that the Earth's surface is not completely perpendicular to the direction of sunlight. To determine total energy, we may use a sophisticated integral to sum up all of the Earth's square meters while determining which ones are oblique and get less power of sunlight. However, there is a far simpler approach to achieve this: notice that the portion of light blocked by the planet is represented by the size of the Earth's shadow. So yup, A ≈ πR\u003csup\u003e2\u003c/sup\u003e is the area of the shadow of Earth (shown in the figure).\n\nNow let's substitute (1) and (2) to ($*$):\n$$L(1 - \\alpha)\\pi R^2 = \\epsilon\\sigma T^44\\pi R^2$$\nand we have: \n$$\\dfrac{L(1 - \\alpha)}{4} = \\epsilon\\sigma T^4$$\nTada! The above equation is the formula for bare-rock layer model.\n\nOf course this is just a very basic model. When we use this method to calculate the temperatures of the planets in our solar system and compare the results to the actual numbers, we find something fascinating. That is, Venus, for example, is far hotter than calculations predicted, as are Earth and Mars. Our current climate model is significantly too cold in comparison to reality. So, what's missing here? What can we add to the model to make it more realistic? One option would be to increase the temperature of the globe by adding greenhouse gases.\n\nTake a look at the next models with greenhouse gases [[posts/greenhouse effect|here]].\n\n",
    "lastmodified": "2022-11-05T21:57:50.528038747+07:00",
    "tags": null
  },
  "/posts/neutrino-communication": {
    "title": "Neutrino-based Communication",
    "content": "\n(still writing...)\n\n***DISCLAIMER:*** *Particle Physics is not my area of study. Please let me know if you notice any mistakes or omissions.*\n\nIn this post, I'll discuss the possibility of using [[notes/neutrinos|neutrinos]] for communication between New York and Tokyo and answer the questions: What can we gain with neutrino-based communication in comparison to the conventional communications? What's the most challenging for developing this kind of communication?\n\nOf course in order to discuss all that, we need to grasp the basic concepts. The first question is undoubtedly:\n\n## What are neutrinos?\n\nBasically they are elementary particles that have neutral charge and very VERY small mass (thought to be massless for a long time). They are [[notes/fermions|fermions]] that interact only via the [[notes/weak interactions|weak interactions]] and [[notes/gravity|gravity]].\n\n*Well, I do realize the above explanation is still a little vague for those who are unfamiliar with particle physics (like me). Like okay, they're fermions, but what are fermions? What exactly are elementary particles? Where do they exist in atoms, and how do they connect with other particles that we are more familiar with, such as electrons, protons, and neutrons? And so i decided to set up this site to utiliize the power of bidirectional links. You can move to the individual notes of each concept by clicking on the internal links, or you can look at how these are connected in the interactive graph at the bottom.*\n\n## Why neutrinos for communication?\n\nNeutrinos can essentially travel through anything and everything. They can propagate through vast cosmic distances without significant attenuation or deflection. This is because they have relatively weak interactions and can't be caught by other particles. This capability makes neutrino a potential messenger for future global point-to-point communication, communication with submarines, interstellar communication or even planetary exploration! Isn't that exciting?\n\n*Neutrinos are often described as tiny particles or as having weak interactions. These phrases might a little bit confusing, though. \"Probability of interaction is small\" or \"neutrino interaction is rare\" are more suitable expressions to explain their penetrating characteristic.*\n\n*The concept of cross section would be helpful in comprehending this rarity. Cross section (σ(cm\u003csup\u003e2\u003c/sup\u003e) is the size of the target particle from a view point of interaction. For example, if 1 GeV protons interact with the target nuclei, the interaction is a hadron interaction with a cross section of σ ~ 3 x 10\u003csup\u003e-26\u003c/sup\u003e cm\u003csup\u003e2\u003c/sup\u003e. On the other hand, if 1 GeV neutrinos encounter the target nuclei, the interaction is weak, with a cross section of about σ ~ 1 x 10\u003csup\u003e-38\u003c/sup\u003e cm\u003csup\u003e2\u003c/sup\u003e. It is smaller than that of hadron interaction by a factor of 3 x 10\u003csup\u003e12\u003c/sup\u003e.*\n\n## Comparison to conventional communications\n\nc\n\n\n## Operation and Challenges\n\n### A past experiment\n\nNeutrino-based communication is thus an intriguing concept, but is it realistic?\n\nWeak interactions seem to provide neutrinos the benefit of penetrating matter, but this same property also suggests that very powerful beams and HUGE massive detectors would be required. These are regarded as the two major obstacles to implementing this kind of communication.\n\nAn [experiment](https://arxiv.org/abs/1203.2847) had been conducted in 2012 using the NuMI beam line and the MINERvA detector to perform low-rate communications over a distance of about 1 km. \n\n### Path length and matter effect\n\nIn our scenario, however, we wish to send information from New York to Tokyo across the earth at a distance of about 9600 km. There have been concerns about whether the huge traveling distance might weaken the beam because it is very large in comparison to the experiment.\n\nThere are several ways to answer this.\n\nYou can use the following formula to calculate the number of particles left (N) after traveling a distance (x):\n$$N = N_0e^{-\\sigma \\rho x}$$\n\nwhere N\u003csub\u003e0\u003c/sub\u003e is the initial number of particles, σ is the interaction cross section and ρ is the density of matter which the particle pass through.\n\nSo when the particle is a neutrino, we all know that the cross section is very small, about 10\u003csup\u003e-38\u003c/sup\u003e cm\u003csup\u003e2\u003c/sup\u003e/GeV. For the density, we can take the standard density of rock, which is 2.65 g/cm\u003csup\u003e3\u003c/sup\u003e, and x would be 9600km. So the reduction should be really really small, even if the path length is very long and the neutrino energy is very high.\n\nWe can use another method to tackle this problem. Let's have a look at the plot below\n\n![[images/particle physics/maxmeier.jpg]]\n\nThis is a plot that shows the neutrino attenuation during propagation through the Earth. The x-axis is the zenith angle. The left y-axis shows the survival probability of a neutrino, and the right y-axis shows the slant depth in meters of water equivalent that the neutrino at that zenith angle would be passing through. So for our problem, we have 9600km, if we take the standard density of rock of 2.65 g/cm\u003csup\u003e3\u003c/sup\u003e, then 9600km of rock would correspond to approximately 26000km of water equivalent. So according to this plot, going from New York to Tokyo would correspond to a zenith angle of 110\u003csup\u003eo\u003c/sup\u003e. For a 120 GeV beam, for example, we should expect almost no neutrino attenuation. Of course this is just rough estimation.\n\nWe can also calculate the neutrino survival probability by ourselves using this formula:\n$$P_{surv} = e^{-N_A\\sigma_{E_{nu}}X}$$\n\nwhere N\u003csub\u003eA\u003c/sub\u003e is the Avogadro constant, σ\u003csub\u003eE\u003csub\u003enu\u003c/sub\u003e\u003c/sub\u003e is the total neutrino cross sectrion at energy E\u003csub\u003enu\u003c/sub\u003e, and X is the slant depth in meters water equivalent. To calculate the slant depth you can use a density model of the Earth like [this](https://de.wikipedia.org/wiki/PREM).\n\nRegarding the neutrino oscillations, at ~100 GeV energies neutrino oscillations can change the flavour of our neutrino beam. But most likely our neutrino detector will be able to detect all neutrino flavours. So if the idea of communication is similar to the past experiment using NuMI beam line and MINERvA detector (encoding communication bits by the neutrino beam being either on or off), I think the flavour composition of the neutrino beam should not be relevant.\n\nThere is another approach to the flavour change problem. When a mu-neutrino oscillates to a tau-neutrino and the energy is less than tau production threshold, charged current (CC) interactions never happen. In this case, the neutrino oscillation affects the detection. However the energy that was used (and will be used) is higher enough than the tau production threshold. (I think the interaction cross sections nu-e, nu-mu, and nu-tau can be assumed to be the same; neutral current (NC) cross sections are always the same for nu-e, nu-mu and nu-tau).\n\n### Beam intensity\n\nnumi\n\n### Detector\n\nminerva\n\n## Conclusion",
    "lastmodified": "2022-10-23T13:31:52.008875023+07:00",
    "tags": null
  },
  "/posts/predict-weather-ML": {
    "title": "[PROJECT] Predict the weather using Machine Learning",
    "content": "\n**Github link: https://github.com/thdngan/weatherML** \n\nIn this little project, I followed the instructions from the [Predict The Weather with Machine Learning](https://youtu.be/km95-NMT6lU) project from Dataquest.\n\nI looked for the weather data from Hanoi, where I currently stay, to make it more relatable and see if I can make it useful. Several adjustments were made to accommodate the available data.\n\nI ran into an error near the end of the project that said I \"can not reindex on an axis with duplicate labels.\" So, basically, I was attempting to build another column to determine the monthly average temperature from the maximum temperature column, while grouping the rows by months. However, it turns out that there are duplicate values in this column.\n\nI used df.index.is unique and df.index.duplicated() to identify and search for duplicated values, and eventually discovered that all of the data I first downloaded from NOAA were already non-unique LOL.\n\nSo I think I'll have to deal with these values by removing them (though they make up the majority of the data, lol) or find data from other sources.\n\nI'm currently still trying to resolve this and also continue adding my own analysis and interpretations for optimization.",
    "lastmodified": "2022-11-05T12:47:47.895263411+07:00",
    "tags": null
  },
  "/posts/sampling-and-quantization": {
    "title": "Sampling and Quantization in Image Processing",
    "content": "*Images mentioned in this post are from Digital Image Processing (3rd edition), by Rafael C. Gonzalez, Richard E. Woods. I don't have the permission to use them here.*\n\nImages that we are familiar with represent a very small portion of the spectrum of images that can be acquired at various wavelengths and modalities _(Figure 2.10)_. In this post, I'll talk about the two most common image formats: grayscale and RGB.\n\nThere are two discretization processes in image processing: sampling (spatial discretization) and quantization (amplitude discretization). _Figures 2.16 and 2.17._\n\n-   Sampling: The sampling rate determines the spatial resolution of the image (related to coordinate values).\n\n-   Quantization: The quantization level specifies the image's grayscale range (related to intensity values).\n\nBasically, we begin with a continuous object and end up with a discrete object that has discretization in both the spatial domain and the gray value range. A good digital camera should have a dense enough sampling rate and a fine enough level of quantization to produce images that appear continuous but are actually discrete.\n\n## Grayscale images\n\nEach of the squares in _Figure 2.17 (b)_ represents a picture element, denoted by the term _pixel_. A 256x256 spatial domain image, for example, has 256 x 256 = 65,536 pixels, whereas a 1024x1280 image has 1,310,720 pixels. The value of each pixel in grayscale images is related to the amount of bits of data used to represent the pixel (typically 8 bits), ranging from 0 to 255 (2\u003csup\u003e8\u003c/sup\u003e = 256 grayscale levels created from combinations of 8 binary numbers: 00000000 to 11111111). If a pixel's value is represented by 16 bits, the value range is 0 to 65,535 (2\u003csup\u003e16\u003c/sup\u003e = 65,536 grayscale levels). We can have higher quality images, for instance, 512x512 images instead of 256x256 images with the same number of letters, so it will take more memory to save that image, but it will also have better quality.\n\nIn grayscale images, the value of each pixel only represents the intensity of light, which ranges from the darkest black to the brightest white. RGB images, which have colors, are another popular image format.\n\n## RGB images\n\nA colored image is made up of many colors, almost all of which can be generated from the three primary colors - red, green, and blue - and combined in various ways to display a wide range of colors. Each RGB image is made up of these three colors, as the name implies (or channels). This means that a colored image has more matrices (or channels).\n\nTo represent the intensity (shades of red, green, and blue) in a pixel, each of the small squares would have values ranging from 0 to 255. Then, all of these matrices (channels) are superimposed so that the final image has the value NxMx3, where N and M are the number of rows and columns, respectively, and 3 represents the number of channels. For example, if each matrix has 6 rows and 5 columns, the image value is 6x5x3.\n\nMost high-end cameras capture full 2-dimensional rays for each color, whereas most low-end to mid-end consumer cameras do something slightly different called [[notes/mosaic|mosaic]]. The basic idea is to capture the pixels with color interleaving.\n\n## Videos\n\nSo the next question is, what happens in a video? We have a number of these RGB images. For example, in some formats, we can have 30 x (RGB) for 1 second of video, with each RGB being a 2-dimensional structure. This translates to 30 x 3 = 90 images, with 30 images in 1 second and 3 because there are three color channels. If these images have a resolution of 512x512 and each pixel is represented by 8 bits, we can sometimes say that our resolution is 8 x 3 = 24 bits (3 times because of RGB). We'll see basically 2-dimensional discrete arrays as many seconds or frames as we have in our video using a program that knows how to deal with images. Each of these 30 images is referred to as a frame, and there are 30 frames in a second.\n\n## The Importance and Effects of Resolution in Space and in Gray values\n\n_How many pixels should we have? And what are the gray values we're going to use for them?_\n\nWhen we have 8 bits, 0 represents black and 255 represents white. When discussing the interval between 0 and 1, 255 is sometimes referred to as 1. While we see the black-white-gray image with our eyes, the computer reads it as a string of 0s for the black region, 128 or 0.5 for the grayscale region, and 1 for the white part. _Figure 2.18._\n\nSaturation is one of the potential issues. For instance, because we only have 256 different levels to work with, the image may be too bright and we may be unable to detect small variations in brightness. Remember that the human visual system can adapt to multiple levels of brightness, but not all of them simultaneously - the same is true for images. We can capture many levels (for example, 256), but dealing with a very dark and a very bright region at the same time would be difficult. _Figure 2.19._\n\nSo, we have a discrete number of values to represent our image, and some parts may go above and beyond what we can represent with that number.\n\nNow let's look at the effects in the images below. We have only changed the spatial resolution and not the number of gray values yet: _Figure 2.20._\n\n_Figure 2.20 (a)_ depicts a high-resolution image. This means that the spatial rate is extremely fine - a large number of pixels - and the image quality is excellent. If the image is much coarser _(Figure 2.20 (d))_, there are fewer pixels and less density between them. Apparently, the lines and small details in image (a) are very well represented, whereas in image (d), the small details, such as numbers, are difficult to see, making it hard to read the measurements. Assuming that each pixel is represented by 256 levels, images (a) and (d) have the same range of gray values, but due to the difference in resolution, the representation of fine details is obviously different. We will not be able to detect the smooth variation in gray values with coarse spatial discretization.\n\nNext, let's move on to the effects of coarse discretization of gray values, with fixed number of pixels: _Figure 2.21._\n\nAll four of the images above have the same number of pixels: 452x374. The first image, on the other hand, is displayed in 8 bits (256 values). We only use 7 bits or 128 values for image (b) - basically, values 0 and 1 become 0, 2 and 3 become 2, 4 and 5 become 4,… The simplest method is to take each value in image (a), divide it by 2, round down to the nearest integer, and then multiply it by 2.\n\n![[images/image processing/samquanti.png]]\n\nThere are only 64 values in image (c), which is equivalent to dividing by 4, truncating, and then multiplying by 4 - each 4 values is represented by 1 number. So, for example, 0, 1, 2, and 3 become 0; 4, 5, 6, and 7 all become 4, and so on. Finally, there are only 32 values in image (d). The quality appears to be deteriorating. Looking at the lines in the last image, we can see that there are false contours, whereas the transition in the first image is smooth. This is caused by the previously mentioned value jumps.\n\nWe can continue to even more extreme cases: _Figure 2.21._\n\nIn the final image (h), any value less than 128 becomes 0 - black, and any value greater than 128 becomes 255 - white, and the data is of poor quality.\n\n## References\n1.  Sapiro, G., _Image and Video Processing: From Mars to Hollywood with a Stop at the Hospital_, Coursera. https://www.coursera.org/learn/image-processing?\n2.  University of Tartu, _2. Sampling and quantization_, accessed 15 April 2022, https://sisu.ut.ee/imageprocessing/book/2\n3.  Liu, H. (2021). Chapter 3 - Rail transit collaborative robot systems. In H. Liu (Ed.), _Robot Systems for Rail Transit Applications_ (pp. 89-141). Elsevier.",
    "lastmodified": "2022-11-27T21:03:05.40902667+07:00",
    "tags": null
  },
  "/subjects/climatenweather": {
    "title": "Climate \u0026 Weather",
    "content": "\n## [[posts/predict weather ML|(PROJECT) Predict the weather using Machine Learning]]\n\n## [[posts/naked planet climate model|Naked Planet Climate Model]]\n\n## [[posts/greenhouse effect|Greenhouse Effect]]\n\n## [[posts/greenhouse gases|The physics of greenhouse gases]]\n\n## [[notes/Legacy Mars GCM|Legacy Mars Global Climate Model]]\n\n## [[posts/heat|What is heat and how can you warm up something in space]]\n\n\n\u003cbr\u003e\u003c/br\u003e\nThe above are important writings, click \u003ca href=\"/quartz/tags/climate\"\u003ehere →\u003c/a\u003e to see all posts and notes on Climate, and \u003ca href=\"/quartz/tags/weather\"\u003ehere →\u003c/a\u003e to see all posts and notes on Weather.\n\n\n",
    "lastmodified": "2022-11-05T13:01:40.098445257+07:00",
    "tags": null
  },
  "/subjects/image-processing": {
    "title": "Signal/Image Processing",
    "content": "## [[posts/sampling and quantization|Sampling and Quantization in Image Processing]]\n\n\n\u003cbr\u003e\u003c/br\u003e\nThe above are important writings, click \u003ca href=\"/quartz/tags/image-processing\"\u003ehere →\u003c/a\u003e to see all posts and notes.\n",
    "lastmodified": "2022-11-27T21:07:35.563644114+07:00",
    "tags": null
  },
  "/subjects/particle-physics": {
    "title": "Particle Physics",
    "content": "\n## [[posts/neutrino communication|Neutrino-based Communication]]\n\n\u003cbr\u003e\u003c/br\u003e\nThe above are important writings, click \u003ca href=\"/quartz/tags/particle-physics\"\u003ehere →\u003c/a\u003e to see all posts and notes.\n",
    "lastmodified": "2022-09-03T22:01:59.401650352+07:00",
    "tags": null
  }
}